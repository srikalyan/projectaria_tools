"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9181],{15680:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>d,MDXProvider:()=>u,mdx:()=>v,useMDXComponents:()=>c,withMDXComponents:()=>p});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},o.apply(this,arguments)}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),p=function(e){return function(t){var a=c(t.components);return r.createElement(e,o({},t,{components:a}))}},c=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},m="mdxType",_={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),u=n,m=p["".concat(i,".").concat(u)]||p[u]||_[u]||o;return a?r.createElement(m,s(s({ref:t},d),{},{components:a})):r.createElement(m,s({ref:t},d))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var d=2;d<o;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},83859:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=a(58168),n=(a(96540),a(15680));const o={sidebar_position:70,title:"Advanced Tutorials"},i=void 0,s={unversionedId:"open_datasets/aria_digital_twin_dataset/advanced_tutorials",id:"open_datasets/aria_digital_twin_dataset/advanced_tutorials",title:"Advanced Tutorials",description:"Multi-person Synchronization",source:"@site/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials.mdx",sourceDirName:"open_datasets/aria_digital_twin_dataset",slug:"/open_datasets/aria_digital_twin_dataset/advanced_tutorials",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/open_datasets/aria_digital_twin_dataset/advanced_tutorials.mdx",tags:[],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,title:"Advanced Tutorials"},sidebar:"tutorialSidebar",previous:{title:"Visualizers",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/visualizers"},next:{title:"ADT Challenges",permalink:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/adt_challenges"}},l={},d=[{value:"Multi-person Synchronization",id:"multi-person-synchronization",level:2},{value:"Further resources",id:"further-resources",level:3},{value:"How does time synchronization work in ADT",id:"how-does-time-synchronization-work-in-adt",level:3},{value:"Step 0 : Install project_aria_tools package and create venv if not already done",id:"step-0--install-project_aria_tools-package-and-create-venv-if-not-already-done",level:3},{value:"Step 1 : Prepare download",id:"step-1--prepare-download",level:3},{value:"Step 2 : Download sample multi-person sequence",id:"step-2--download-sample-multi-person-sequence",level:3},{value:"Step 3 : Run the tutorial notebook",id:"step-3--run-the-tutorial-notebook",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...a}=e;return(0,n.mdx)(c,(0,r.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.mdx)("h2",{id:"multi-person-synchronization"},"Multi-person Synchronization"),(0,n.mdx)("p",null,"This tutorial will walk you through the steps to get synchronized ground truth data in a multi-person sequence in the Aria Digital Twin (ADT) dataset."),(0,n.mdx)("h3",{id:"further-resources"},"Further resources"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},(0,n.mdx)("a",{parentName:"li",href:"/projectaria_tools/docs/data_formats/aria_vrs/timestamps_in_aria_vrs"},"Timestamps in Aria VRS Files"))),(0,n.mdx)("h3",{id:"how-does-time-synchronization-work-in-adt"},"How does time synchronization work in ADT"),(0,n.mdx)("p",null,"In a single-person ADT sequence, all ground truth data is stored in the ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/aria_vrs/timestamps_in_aria_vrs"},"device capture time")," of the Project Aria device used by the person."),(0,n.mdx)("p",null,"For a multi-person ADT sequence, we store ground truth files in two separate folders, each representing a person's Aria recording. Each subsequence is self-contained such that all ground truth data is also stored in the device capture time domain of the associated Aria device. To synchronize the two Aria devices, we store a mapping between ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/aria_vrs/timestamps_in_aria_vrs"},"timecode")," timestamps and device capture timestamps in each Aria data."),(0,n.mdx)("h3",{id:"step-0--install-project_aria_tools-package-and-create-venv-if-not-already-done"},"Step 0 : Install project_aria_tools package and create venv if not already done"),(0,n.mdx)("p",null,"Follow Step 0 to Step 3 in ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/getting_started"},"Getting Started"),"."),(0,n.mdx)("h3",{id:"step-1--prepare-download"},"Step 1 : Prepare download"),(0,n.mdx)("p",null,"Follow Step 1 to Step 3 in ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/open_datasets/aria_digital_twin_dataset/dataset_download#download-the-sample-aria-digital-twin-adt-sequence"},"Download the sample ADT sequence")),(0,n.mdx)("h3",{id:"step-2--download-sample-multi-person-sequence"},"Step 2 : Download sample multi-person sequence"),(0,n.mdx)("p",null,"From your python virtual environment, run:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-bash"},"adt_benchmark_dataset_downloader -c $HOME/Documents/projectaria_tools_adt_data/aria_digital_twin_dataset_download_urls.json \\\n-o $HOME/Documents/projectaria_tools_adt_data/ -l Apartment_release_multiskeleton_party_seq114 \\\n-d 0\n")),(0,n.mdx)("h3",{id:"step-3--run-the-tutorial-notebook"},"Step 3 : Run the tutorial notebook"),(0,n.mdx)("p",null,"From your python virtual environment, run:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre"},"cd $HOME/Documents/projectaria_sandbox\n\njupyter notebook projectaria_tools/projects/AriaDigitalTwinDatasetTools/examples/adt_multiperson_tutorial.ipynb\n")),(0,n.mdx)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,n.mdx)("p",null,"Go to ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/installation/troubleshooting"},"Data Utilities Troubleshooting")," if you experience issues using this guide."))}u.isMDXComponent=!0}}]);