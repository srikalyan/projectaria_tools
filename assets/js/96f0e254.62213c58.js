"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2258],{15680:(e,a,r)=>{r.r(a),r.d(a,{MDXContext:()=>m,MDXProvider:()=>c,mdx:()=>h,useMDXComponents:()=>p,withMDXComponents:()=>d});var t=r(96540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(){return i=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var r=arguments[a];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},i.apply(this,arguments)}function s(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?s(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=t.createContext({}),d=function(e){return function(a){var r=p(a.components);return t.createElement(e,i({},a,{components:r}))}},p=function(e){var a=t.useContext(m),r=a;return e&&(r="function"==typeof e?e(a):o(o({},a),e)),r},c=function(e){var a=p(e.components);return t.createElement(m.Provider,{value:a},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},f=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(r),c=n,u=d["".concat(s,".").concat(c)]||d[c]||g[c]||i;return r?t.createElement(u,o(o({ref:a},m),{},{components:r})):t.createElement(u,o({ref:a},m))}));function h(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=f;var o={};for(var l in a)hasOwnProperty.call(a,l)&&(o[l]=a[l]);o.originalType=e,o[u]="string"==typeof e?e:n,s[1]=o;for(var m=2;m<i;m++)s[m]=r[m];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},94294:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=r(58168),n=(r(96540),r(15680)),i=r(98180);const s={sidebar_position:50,title:"Streaming and Visualizing All Live Sensor Data"},o="Streaming and Visualizing All Live Sensor Data",l={unversionedId:"ARK/sdk/samples/device_stream",id:"ARK/sdk/samples/device_stream",title:"Streaming and Visualizing All Live Sensor Data",description:"Overview",source:"@site/docs/ARK/sdk/samples/device_stream.mdx",sourceDirName:"ARK/sdk/samples",slug:"/ARK/sdk/samples/device_stream",permalink:"/projectaria_tools/docs/ARK/sdk/samples/device_stream",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/ARK/sdk/samples/device_stream.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,title:"Streaming and Visualizing All Live Sensor Data"},sidebar:"tutorialSidebar",previous:{title:"Streaming Subscription",permalink:"/projectaria_tools/docs/ARK/sdk/samples/streaming_subscribe"},next:{title:"Streaming Undistorted RGB Image Using Calibration",permalink:"/projectaria_tools/docs/ARK/sdk/samples/undistort_rgb_image"}},m={},d=[{value:"Overview",id:"overview",level:2},{value:"Run <code>device_stream</code>",id:"run-device_stream",level:2},{value:"Example 1: Start and stop streaming over USB",id:"example-1-start-and-stop-streaming-over-usb",level:3},{value:"Example 2: Start and stop streaming over Wi-Fi",id:"example-2-start-and-stop-streaming-over-wi-fi",level:3},{value:"Code walkthrough",id:"code-walkthrough",level:3},{value:"1. Get StreamingManager instance",id:"1-get-streamingmanager-instance",level:4},{value:"2. Configure Streaming Settings (optional)",id:"2-configure-streaming-settings-optional",level:4},{value:"3. Start Streaming",id:"3-start-streaming",level:4},{value:"4. Write callbacks for each sensor data stream",id:"4-write-callbacks-for-each-sensor-data-stream",level:4},{value:"5. Register callbacks in the streaming client",id:"5-register-callbacks-in-the-streaming-client",level:4},{value:"6. Visualize live stream",id:"6-visualize-live-stream",level:4},{value:"7. Stop the stream &amp; free resources",id:"7-stop-the-stream--free-resources",level:4}],p={toc:d},c="wrapper";function u(e){let{components:a,...r}=e;return(0,n.mdx)(c,(0,t.A)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.mdx)("h1",{id:"streaming-and-visualizing-all-live-sensor-data"},"Streaming and Visualizing All Live Sensor Data"),(0,n.mdx)("h2",{id:"overview"},"Overview"),(0,n.mdx)("p",null,"This page shows how to run the code sample ",(0,n.mdx)("inlineCode",{parentName:"p"},"device_stream")," to:"),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},"Start and stop streaming data from Aria glasses over USB and Wi-Fi"),(0,n.mdx)("li",{parentName:"ul"},"Visualize the sensor streams from Aria's RGB, Mono Scene (SLAM), ET cameras and IMU sensors")),(0,n.mdx)("admonition",{type:"note"},(0,n.mdx)("p",{parentName:"admonition"},"These code samples require Python 3.9+ because of a fastplotlib dependency")),(0,n.mdx)("h2",{id:"run-device_stream"},"Run ",(0,n.mdx)("inlineCode",{parentName:"h2"},"device_stream")),(0,n.mdx)("h3",{id:"example-1-start-and-stop-streaming-over-usb"},"Example 1: Start and stop streaming over USB"),(0,n.mdx)("ol",null,(0,n.mdx)("li",{parentName:"ol"},"Plug your Aria glasses into your computer, using the provided USB cable"),(0,n.mdx)("li",{parentName:"ol"},"From the samples directory in Terminal, run:")),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-bash"},"python -m device_stream --interface usb --update_iptables\n")),(0,n.mdx)("p",null,"You should then see:"),(0,n.mdx)("div",{style:{textAlign:"center"}},(0,n.mdx)("img",{width:"100%",height:"100%",src:(0,i.default)("img/ARK/sdk/device_stream.png"),alt:"Aria Live Stream Window"})),(0,n.mdx)("admonition",{type:"note"},(0,n.mdx)("p",{parentName:"admonition"},"Cameras on Aria glasses are installed sideways. The visualizer rotates the raw image data for a more natural view.")),(0,n.mdx)("ol",{start:3},(0,n.mdx)("li",{parentName:"ol"},"There are several ways you can stop streaming:")),(0,n.mdx)("ul",null,(0,n.mdx)("li",{parentName:"ul"},"Press q or ESC to quit the app"),(0,n.mdx)("li",{parentName:"ul"},"Use Ctrl-C to terminate in terminal"),(0,n.mdx)("li",{parentName:"ul"},"Press the Capture button on your glasses")),(0,n.mdx)("h3",{id:"example-2-start-and-stop-streaming-over-wi-fi"},"Example 2: Start and stop streaming over Wi-Fi"),(0,n.mdx)("p",null,"Streaming over Wi-Fi is similar, with a few extra steps."),(0,n.mdx)("ol",null,(0,n.mdx)("li",{parentName:"ol"},"Connect your Aria Glasses and Computer to the same Wi-Fi compatible Wi-Fi network:",(0,n.mdx)("ul",{parentName:"li"},(0,n.mdx)("li",{parentName:"ul"},"Check ",(0,n.mdx)("a",{parentName:"li",href:"/projectaria_tools/docs/ARK/sdk/setup"},"Requirements")," for details about compatible routers"))),(0,n.mdx)("li",{parentName:"ol"},"Open the Mobile Companion app and tap ",(0,n.mdx)("a",{parentName:"li",href:"/docs/ARK/mobile_companion_app#dashboard"},"Wi-Fi on the Dashboard")," to see your glasses' IP address"),(0,n.mdx)("li",{parentName:"ol"},"From the samples directory in Terminal, run:")),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-bash"},"python -m device_stream --interface wifi --device-ip <Glasses IP> --update_iptables\n")),(0,n.mdx)("p",null,"Make sure you replace ",(0,n.mdx)("inlineCode",{parentName:"p"},"<Glasses IP>")," with the IP address you got from the Mobile Companion app"),(0,n.mdx)("p",null,"If you're on MacOS and lose internet connection, run ",(0,n.mdx)("inlineCode",{parentName:"p"},"aria-doctor")," in a separate terminal."),(0,n.mdx)("ol",{start:4},(0,n.mdx)("li",{parentName:"ol"},"Stop streaming using any of the methods listed in Example 1")),(0,n.mdx)("h3",{id:"code-walkthrough"},"Code walkthrough"),(0,n.mdx)("h4",{id:"1-get-streamingmanager-instance"},"1. Get StreamingManager instance"),(0,n.mdx)("p",null,"Use ",(0,n.mdx)("a",{parentName:"p",href:"/docs/ARK/sdk/api_reference#ariasdkstreamingmanager"},"StreamingManager")," to start and stop streaming."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_manager = device.streaming_manager\n")),(0,n.mdx)("h4",{id:"2-configure-streaming-settings-optional"},"2. Configure Streaming Settings (optional)"),(0,n.mdx)("p",null,"Specify the profile name for the streaming in ",(0,n.mdx)("a",{parentName:"p",href:"/docs/ARK/sdk/api_reference#ariasdkstreamingconfig"},"StreamingConfig"),", otherwise you'll use your glasses' ",(0,n.mdx)("a",{parentName:"p",href:"/docs/ARK/ARK_quickstart#set-your-default-recording-profile"},"default recording profile"),". If a default recording profile has not been set, you'll stream using profile18. Go to the ",(0,n.mdx)("a",{parentName:"p",href:"/docs/ARK/sdk/concepts/sdk_sensor_profiles"},"Sensor Profiles page")," for supported profiles and their specs."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_config = StreamingConfig()\nstreaming_config.profile_name = args.profile_name\n")),(0,n.mdx)("p",null,"Use ephemeral streaming certificates to protect your streamed data from being eavesdropped by other computer without certificate. This needs to be set to ",(0,n.mdx)("inlineCode",{parentName:"p"},"true")," when no persistent certificates were pre-installed. Go to the ",(0,n.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/ARK/sdk/concepts/streaming_internals"},"Streaming Internals page")," on the various aspects of streaming security and how certificates are used."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_config.security_options.use_ephemeral_certs = True\nstreaming_manager.streaming_config = streaming_config\n")),(0,n.mdx)("h4",{id:"3-start-streaming"},"3. Start Streaming"),(0,n.mdx)("p",null,"Start streaming using all the previously set configurations."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_manager.start_streaming()\n")),(0,n.mdx)("h4",{id:"4-write-callbacks-for-each-sensor-data-stream"},"4. Write callbacks for each sensor data stream"),(0,n.mdx)("p",null,"Create an observer class derived from ",(0,n.mdx)("inlineCode",{parentName:"p"},"BaseStreamingClientObserver")," defined in ",(0,n.mdx)("inlineCode",{parentName:"p"},"visualizer.py"),". Find the complex example named ",(0,n.mdx)("inlineCode",{parentName:"p"},"AriaVisualizerStreamingClientObserver")," in ",(0,n.mdx)("inlineCode",{parentName:"p"},"visualizer.py"),", which is used in this sample app to fetch and visualize data from each sensor."),(0,n.mdx)("p",null,"Find a simpler example in ",(0,n.mdx)("a",{parentName:"p",href:"/docs/ARK/sdk/samples/undistort_rgb_image"},"undistort_rgb_image.py")," to fetch RGB data from the stream:"),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"class StreamingClientObserver:\n  def __init__(self):\n      self.rgb_image = None\n\n  def on_image_received(self, image: np.array, record: ImageDataRecord):\n      self.rgb_image = image\n")),(0,n.mdx)("h4",{id:"5-register-callbacks-in-the-streaming-client"},"5. Register callbacks in the streaming client"),(0,n.mdx)("p",null,"Once your observer class is defined, you will need to register it with a stream client object."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"# get streaming client from the streaming manager\nstreaming_client = streaming_manager.streaming_client\n# create custom visualizer and streaming client observer class instances\naria_visualizer = AriaVisualizer()\naria_visualizer_streaming_client_observer = AriaVisualizerStreamingClientObserver(aria_visualizer)\n# register callbacks\nstreaming_client.set_streaming_client_observer(aria_visualizer_streaming_client_observer)\n")),(0,n.mdx)("h4",{id:"6-visualize-live-stream"},"6. Visualize live stream"),(0,n.mdx)("p",null,"Subscribe to the live stream data and enter the rendering loop to visualize the streaming data until the window is closed."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_client.subscribe()\naria_visualizer.render_loop()\n")),(0,n.mdx)("h4",{id:"7-stop-the-stream--free-resources"},"7. Stop the stream & free resources"),(0,n.mdx)("p",null,"Once you've finished streaming, unsubscribe from ",(0,n.mdx)("inlineCode",{parentName:"p"},"StreamingClient")," instance, so that any held resources can be released, stop streaming and disconnect the device."),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-python"},"streaming_client.unsubscribe()\nstreaming_manager.stop_streaming()\ndevice_client.disconnect(device)\n")))}u.isMDXComponent=!0}}]);