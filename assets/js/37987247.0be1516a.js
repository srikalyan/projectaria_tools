"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9194],{15680:(e,a,n)=>{n.r(a),n.d(a,{MDXContext:()=>d,MDXProvider:()=>c,mdx:()=>x,useMDXComponents:()=>u,withMDXComponents:()=>m});var t=n(96540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(){return l=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var n=arguments[a];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},l.apply(this,arguments)}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=t.createContext({}),m=function(e){return function(a){var n=u(a.components);return t.createElement(e,l({},a,{components:n}))}},u=function(e){var a=t.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(d.Provider,{value:a},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},h=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(n),c=i,p=m["".concat(r,".").concat(c)]||m[c]||g[c]||l;return n?t.createElement(p,s(s({ref:a},d),{},{components:n})):t.createElement(p,s({ref:a},d))}));function x(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=h;var s={};for(var o in a)hasOwnProperty.call(a,o)&&(s[o]=a[o]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var d=2;d<l;d++)r[d]=n[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},74850:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var t=n(58168),i=(n(96540),n(15680));const l={sidebar_position:80,title:"Eye Gaze"},r="MPS output - Eye gaze",s={unversionedId:"data_formats/mps/mps_eye_gaze",id:"data_formats/mps/mps_eye_gaze",title:"Eye Gaze",description:"Eye Gaze Data Format",source:"@site/docs/data_formats/mps/mps_eye_gaze.mdx",sourceDirName:"data_formats/mps",slug:"/data_formats/mps/mps_eye_gaze",permalink:"/projectaria_tools/docs/data_formats/mps/mps_eye_gaze",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_formats/mps/mps_eye_gaze.mdx",tags:[],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80,title:"Eye Gaze"},sidebar:"tutorialSidebar",previous:{title:"Multi-SLAM",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_multi_slam"},next:{title:"2D Image Coordinate System Conventions",permalink:"/projectaria_tools/docs/data_formats/coordinate_convention/2d_image_coordinate_system_convention"}},o={},d=[{value:"Eye Gaze Data Format",id:"eye-gaze-data-format",level:2},{value:"general_eye_gaze.csv",id:"general_eye_gazecsv",level:2},{value:"personalized_eye_gaze.csv",id:"personalized_eye_gazecsv",level:2},{value:"General Principles",id:"general-principles",level:2},{value:"Confidence Intervals",id:"confidence-intervals",level:3},{value:"Yaw/Pitch to 3D vector conversion",id:"yawpitch-to-3d-vector-conversion",level:3},{value:"Session_uid",id:"session_uid",level:3},{value:"Examples",id:"examples",level:4},{value:"summary.json",id:"summaryjson",level:2},{value:"Stage 1: GazeInference (all recordings)",id:"stage-1-gazeinference-all-recordings",level:3},{value:"Stage 2: InSessionCalibration (if in-session calibration available)",id:"stage-2-insessioncalibration-if-in-session-calibration-available",level:3},{value:"Stage 3: CalibrationCorrection",id:"stage-3-calibrationcorrection",level:3},{value:"Example summary.json files",id:"example-summaryjson-files",level:3},{value:"<strong>Scenario 1: No calibration available</strong>",id:"scenario-1-no-calibration-available",level:4},{value:"<strong>Scenario 2: In-session calibration available</strong>",id:"scenario-2-in-session-calibration-available",level:4}],m={toc:d},u="wrapper";function c(e){let{components:a,...n}=e;return(0,i.mdx)(u,(0,t.A)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"mps-output---eye-gaze"},"MPS output - Eye gaze"),(0,i.mdx)("h2",{id:"eye-gaze-data-format"},"Eye Gaze Data Format"),(0,i.mdx)("p",null,"Project Aria's ",(0,i.mdx)("a",{parentName:"p",href:"/docs/ARK/mps"},"Machine Perception Services (MPS)")," uses Aria's Eye Tracking (ET) camera images to estimate the direction the user is looking. This eye gaze estimation is in ",(0,i.mdx)("a",{parentName:"p",href:"/docs/data_formats/coordinate_convention/3d_coordinate_frame_convention#the-nominal-central-pupil-frame-cpf"},"Central Pupil Frame"),"."),(0,i.mdx)("p",null,"Eye Gaze MPS file outputs are:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"summary.json")," - high level report on MPS eye gaze generation"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"general_eye_gaze.csv")," - based on the standard eye gaze configuration"),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"personalized_eye_gaze.csv")," - only if you\u2019ve made the recording with ",(0,i.mdx)("a",{parentName:"li",href:"/docs/ARK/mps/eye_gaze_calibration"},"in-session Eye Gaze Calibration"))),(0,i.mdx)("p",null,"Eye gaze data can be visualized using the MPS Viewer in ",(0,i.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/visualization/visualization_python"},"Python")," or ",(0,i.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/visualization/visualization_cpp"},"C++"),"."),(0,i.mdx)("h2",{id:"general_eye_gazecsv"},"general_eye_gaze.csv"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"general_eye_gaze.csv")," outputs are available for all recordings made with Eye Tracking cameras, and contain the following fields:"),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},(0,i.mdx)("strong",{parentName:"th"},"Column")),(0,i.mdx)("th",{parentName:"tr",align:null},"Type"),(0,i.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"tracking_timestamp_us")),(0,i.mdx)("td",{parentName:"tr",align:null},"int"),(0,i.mdx)("td",{parentName:"tr",align:null},"This is the timestamp, in microseconds, of the eye tracking camera frame in device time domain. The MPS location output also contains pose estimations in the same time domain and these timestamps can be directly used to infer the device pose from the MPS location output")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"yaw_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This is the eye gaze yaw angle in radians in CPF frame. The yaw angle is the angle between the projection of the eye gaze vector (originating at CPF) on XZ plane and the Z axis in the CPF frame")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"pitch_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This is the eye gaze pitch angle in radians in CPF frame. The pitch angle is the angle between the projection of the eye gaze vector (originating at CPF) on YZ plane and the Z axis in the CPF frame")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"depth_m")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This is the absolute depth in meters of the 3D gaze point in CPF frame. This value is currently not available as part of MPS output")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"yaw_low_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This value represents the lower bound of the confidence interval for the ",(0,i.mdx)("strong",{parentName:"td"},"yaw")," estimation")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"pitch_low_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This value represents the lower bound of the confidence interval for the ",(0,i.mdx)("strong",{parentName:"td"},"pitch")," estimation")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"yaw_high_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This value represents the upper bound of the confidence interval for the ",(0,i.mdx)("strong",{parentName:"td"},"yaw")," estimation")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"pitch_high_rads_cpf")),(0,i.mdx)("td",{parentName:"tr",align:null},"float"),(0,i.mdx)("td",{parentName:"tr",align:null},"This value represents the upper bound of the confidence interval for the ",(0,i.mdx)("strong",{parentName:"td"},"pitch")," estimation")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"session_uid")),(0,i.mdx)("td",{parentName:"tr",align:null},"string"),(0,i.mdx)("td",{parentName:"tr",align:null},"Unique identifier for a session within the VRS file")))),(0,i.mdx)("h2",{id:"personalized_eye_gazecsv"},"personalized_eye_gaze.csv"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"personalized_eye_gaze.csv")," outputs are only generated if the recording has ",(0,i.mdx)("a",{parentName:"p",href:"/docs/ARK/mps/eye_gaze_calibration"},"in-session Eye Gaze Calibration data"),". The schema is exactly the same as ",(0,i.mdx)("inlineCode",{parentName:"p"},"general_eye_gaze.csv"),".  The session_uids between generalized_gaze output and calibrated gaze output will be the same."),(0,i.mdx)("p",null,"The in-session calibration is used to compute user specific calibration (gaze correction parameters). The yaw, pitch, yaw_low, yaw_high, pitch_low, pitch_high will be adjusted based on this calibration. If the instructions for in-session calibration are followed correctly, the calibrated eye gaze is expected to be more accurate in comparison to generalized eye gaze."),(0,i.mdx)("h2",{id:"general-principles"},"General Principles"),(0,i.mdx)("p",null,"The following principles apply to ",(0,i.mdx)("inlineCode",{parentName:"p"},"general_eye_gaze.csv")," and  ",(0,i.mdx)("inlineCode",{parentName:"p"},"personalized_eye_gaze.csv")),(0,i.mdx)("h3",{id:"confidence-intervals"},"Confidence Intervals"),(0,i.mdx)("p",null,"The confidence intervals represent the models uncertainty estimation. A smaller interval represents higher confidence and a wider interval represents lower confidence. The confidence interval angles are in radians and in CPF frame.\nSome common factors that impact uncertainty include:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Blinking"),(0,i.mdx)("li",{parentName:"ul"},"Hair occluding the eye tracking cameras"),(0,i.mdx)("li",{parentName:"ul"},"Re-adjusting glasses or taking them off to clean them")),(0,i.mdx)("p",null,"For utility function to load the eye gaze in Python and C++, please check the ",(0,i.mdx)("a",{parentName:"p",href:"/docs/data_utilities/core_code_snippets/mps#eye-gaze"},"code examples")),(0,i.mdx)("h3",{id:"yawpitch-to-3d-vector-conversion"},"Yaw/Pitch to 3D vector conversion"),(0,i.mdx)("p",null,"A common use case is to convert the gaze angles into 3D vectors. To convert a gaze measurement (yaw/pitch) into a 3D gaze vector originating at the origin of CPF use the operation ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/facebookresearch/projectaria_tools/blob/main/core/mps/EyeGazeReader.h#L40"},"here"),"."),(0,i.mdx)("h3",{id:"session_uid"},"Session_uid"),(0,i.mdx)("p",null,"When there are multiple users in the same vrs file (users handing off glasses to a different user without stopping the recording), ",(0,i.mdx)("inlineCode",{parentName:"p"},"session_uid"),"  identifies intervals corresponding to different calibration sessions if in-app calibration is performed during the hand-offs."),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"All the rows with the same session_uid belong to the same session within the VRS file"),(0,i.mdx)("li",{parentName:"ul"},"If there are multiple calibration sessions, the session_uid would be unique for each session")),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"general_eye_gaze.csv")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"There will be a single value when there is no in-session eye calibration or only one in-session calibration"),(0,i.mdx)("li",{parentName:"ul"},"The session_uid column values will always match those in ",(0,i.mdx)("inlineCode",{parentName:"li"},"personalized_eye_gaze.csv"))),(0,i.mdx)("h4",{id:"examples"},"Examples"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"No calibrated eye gaze - general_eye_gaze will have one session_uid across all rows"),(0,i.mdx)("li",{parentName:"ul"},"One in-session calibration - general_eye_gaze will have one session_uid across all rows and this value will be identical in personalized_eye_gaze"),(0,i.mdx)("li",{parentName:"ul"},"k > 1 in-session calibrations - both generalized and calibrated eye gaze will have k unique session_uid that start when in-session calibration begins and this value will be identical in personalized_eye_gaze")),(0,i.mdx)("h2",{id:"summaryjson"},"summary.json"),(0,i.mdx)("p",null,"The summary.json file provides a high level overview of the output for each of the major stages. This is similar to the ",(0,i.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/mps/mps_summary#operator-summary"},"operator summary output")," from the MPS location pipeline."),(0,i.mdx)("p",null,"For each stage of the ET pipeline, there will be one section in this file. If the section is missing, that means that the stage is not applicable or was not run."),(0,i.mdx)("h3",{id:"stage-1-gazeinference-all-recordings"},"Stage 1: GazeInference (all recordings)"),(0,i.mdx)("p",null,"Uncalibrated Eye Gaze derived data has been generated. If you\u2019re able to download the data to view the .json file it will say SUCCESS."),(0,i.mdx)("table",null,(0,i.mdx)("tr",null,(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Name")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Type ")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Description"))),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"status"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"SUCCESS (if you are able to download the data and view this file)")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"message"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"Any further details, if available"))),(0,i.mdx)("h3",{id:"stage-2-insessioncalibration-if-in-session-calibration-available"},"Stage 2: InSessionCalibration (if in-session calibration available)"),(0,i.mdx)("p",null,"If the recording contains one or more valid in-session calibration intervals, the ET pipeline will compute the calibration parameters."),(0,i.mdx)("p",null,"Each calibration session found in the VRS file will generate the following information:"),(0,i.mdx)("table",null,(0,i.mdx)("tr",null,(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Name")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Type")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Description"))),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"status"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"SUCCESS / FAIL")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"message"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"Any further details, if available")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"session_uid"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"Unique ID representing the session")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"start_time_us"),(0,i.mdx)("td",null,"int"),(0,i.mdx)("td",null,"When the first wearer starts using the Aria glasses, or when subsequent wearer begins in-session calibration (2nd eye calibration onwards)")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"end_time_us"),(0,i.mdx)("td",null,"int"),(0,i.mdx)("td",null,"When a wearer session or recording ends")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"params"),(0,i.mdx)("td",null,"Array[float]"),(0,i.mdx)("td",null,"The calibration parameters (4 floats)"))),(0,i.mdx)("admonition",{type:"note"},(0,i.mdx)("p",{parentName:"admonition"},"The status should be SUCCESS, unless there was an issue where the wearer began the in-session calibration, but did not generate the necessary data. In this case it would FAIL.")),(0,i.mdx)("h3",{id:"stage-3-calibrationcorrection"},"Stage 3: CalibrationCorrection"),(0,i.mdx)("p",null,"If Stage 2 has been successful, CalibrationCorrection will contain details about calibrated eye gaze. For each calibration session, we will output the following information:"),(0,i.mdx)("table",null,(0,i.mdx)("tr",null,(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Name")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Type")),(0,i.mdx)("td",null,(0,i.mdx)("strong",null,"Description"))),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"status"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"SUCCESS / FAIL")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"message"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"Any further details, if available")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"session_uid"),(0,i.mdx)("td",null,"string"),(0,i.mdx)("td",null,"Unique id representing the session")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"generalized_gaze_error_rads"),(0,i.mdx)("td",null,"dict"),(0,i.mdx)("td",null,"Generalized gaze error in radians")),(0,i.mdx)("tr",null,(0,i.mdx)("td",null,"calibrated_gaze_error_rads"),(0,i.mdx)("td",null,"dict"),(0,i.mdx)("td",null,"Calibrated gaze error in radians"))),(0,i.mdx)("p",null,"If the previous stages completed successfully, the status for this stage should always be SUCCESS."),(0,i.mdx)("h3",{id:"example-summaryjson-files"},"Example summary.json files"),(0,i.mdx)("h4",{id:"scenario-1-no-calibration-available"},(0,i.mdx)("strong",{parentName:"h4"},"Scenario 1: No calibration available")),(0,i.mdx)("p",null,"This report is quite short, as no in-session calibration data is available. Eye Gaze MPS was successfully created:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "GazeInference": {\n        "status": "SUCCESS"\n    }\n}\n')),(0,i.mdx)("h4",{id:"scenario-2-in-session-calibration-available"},(0,i.mdx)("strong",{parentName:"h4"},"Scenario 2: In-session calibration available")),(0,i.mdx)("p",null,"In this example, there were multiple calibration sessions:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"In session one calibration was completed successfully"),(0,i.mdx)("li",{parentName:"ul"},"In session two, the user began the in-session calibration, but did not generate the necessary data.")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n    "GazeInference": {\n        "status": "SUCCESS"\n    },\n    "InSessionCalibration": [\n        {\n            "Status": "SUCCESS",\n            "session_uid": "01ac9bf2-334a-49c6-9dc6-fdc07ab08a2a",\n            "message": "",\n            "start_time_us": 147588973,\n            "end_time_us": 208304973,\n            "num_calibu_frames": 1000,\n            "parameters":[1.02361481, 1.05426864, 0.01158671, 0.01403982]\n        },\n        {\n            "Status": "FAIL",\n            "message": "Couldn\'t compute GT gaze vectors for the interval [487241235, 508304973]",\n            "session_uid": "6063bf11-84ef-4ed5-a785-ac44b4328fdc",\n            "start_time_us": 487241235,\n            "end_time_us": 508304973,\n            "num_calibu_frames": 10,\n        }\n    ],\n    "CalibrationCorrection": [\n        {\n            "status": "SUCCESS",\n            "message": "",\n            "session_uid": "01ac9bf2-334a-49c6-9dc6-fdc07ab08a2a",\n            "generalized_gaze_error_rads": {\n                "mean": 0.047444001119500284,\n                                     "std": 0.015775822542178554,\n\n                                     "min": 0.009264740570696107,\n\n                                     "max": 0.16895371875829926,\n\n                                     "p25": 0.036160872560797655,\n\n                                     "p50": 0.04529629090291307,\n\n                                     "p75": 0.05761677117669144,\n\n                                     "p95": 0.0675233675673802\n            },\n            "calibrated_gaze_error_rads": {\n                "mean": 0.037444001119500284,\n\n                                     "std": 0.005775822542178554,\n\n                                     "min": 0.006364740570696107,\n\n                                     "max": 0.06835371875829926,\n\n                                     "p25": 0.026060872560797655,\n\n                                     "p50": 0.02519329090291307,\n\n                                     "p75": 0.03760677117669144,\n\n                                     "p95": 0.0474232675673802\n            }\n        },\n        {\n            "status": "FAILURE",\n            "message": "No calibration available for this session",\n            "session_uid": "6063bf11-84ef-4ed5-a785-ac44b4328fdc"\n        }    ]\n}\n')))}c.isMDXComponent=!0}}]);