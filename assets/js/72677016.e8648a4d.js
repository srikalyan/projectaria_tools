"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4681],{15680:(e,t,a)=>{a.r(t),a.d(t,{MDXContext:()=>d,MDXProvider:()=>c,mdx:()=>x,useMDXComponents:()=>p,withMDXComponents:()=>s});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},i.apply(this,arguments)}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function m(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){return function(t){var a=p(t.components);return n.createElement(e,i({},t,{components:a}))}},p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),s=p(a),c=r,u=s["".concat(o,".").concat(c)]||s[c]||f[c]||i;return a?n.createElement(u,l(l({ref:t},d),{},{components:a})):n.createElement(u,l({ref:t},d))}));function x(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=b;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},59123:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=a(58168),r=(a(96540),a(15680));const i={sidebar_position:50,title:"Calibration Data"},o="MPS output - Calibration",l={unversionedId:"data_formats/mps/slam/mps_calibration",id:"data_formats/mps/slam/mps_calibration",title:"Calibration Data",description:"Online calibration is generated as part of SLAM (Location in the Desktop Companion app) MPS requests.",source:"@site/docs/data_formats/mps/slam/mps_calibration.mdx",sourceDirName:"data_formats/mps/slam",slug:"/data_formats/mps/slam/mps_calibration",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_calibration",draft:!1,editUrl:"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_formats/mps/slam/mps_calibration.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,title:"Calibration Data"},sidebar:"tutorialSidebar",previous:{title:"Semi-Dense Point Cloud",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_pointcloud"},next:{title:"Multi-SLAM",permalink:"/projectaria_tools/docs/data_formats/mps/slam/mps_multi_slam"}},m={},d=[{value:"Online calibration",id:"online-calibration",level:2},{value:"Static camera calibration",id:"static-camera-calibration",level:2}],s={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,r.mdx)(p,(0,n.A)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h1",{id:"mps-output---calibration"},"MPS output - Calibration"),(0,r.mdx)("p",null,"Online calibration is generated as part of SLAM (Location in the Desktop Companion app) ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/ARK/mps/"},"MPS requests"),"."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"online_calibration.jsonl")," file")),(0,r.mdx)("p",null,"The ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/visualization/visualization_python#run-aria-sensor-viewer"},"Aria Sensor Viewer")," displays the relative position and orientation of most Project Aria glasses sensors (cameras, IMUs, microphones, magnetometer & barometer) in a common reference."),(0,r.mdx)("p",null,"Static camera calibration may also be available in some datasets that include stationary cameras as well as moving Project Aria glasses."),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},"The name of the static camera calibration .csv file may vary between projects")),(0,r.mdx)("h2",{id:"online-calibration"},"Online calibration"),(0,r.mdx)("p",null,"The JSONL file contains one json online calibration record per line. Each record is a json dict object that contains timestamp metadata and the result of online calibration for the cameras and IMUs. The calibration parameters contain ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/tech_insights/camera_intrinsic_models"},"intrinsics")," and ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_formats/coordinate_convention/3d_coordinate_frame_convention"},"extrinsics")," parameters for each sensor as well as a time offsets which best temporally align their data. For how to load and read online calibrations in Python and C++, please check the ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/core_code_snippets/mps#online-calibration"},"code example")),(0,r.mdx)("h2",{id:"static-camera-calibration"},"Static camera calibration"),(0,r.mdx)("p",null,"Some Aria data may contain the poses and intrinsic calibration of set stationary cameras. For the utility function to load the static cameras in Python and C++, please check the ",(0,r.mdx)("a",{parentName:"p",href:"/projectaria_tools/docs/data_utilities/core_code_snippets/mps#static-camera-calibration"},"code example")),(0,r.mdx)("table",null,(0,r.mdx)("thead",{parentName:"table"},(0,r.mdx)("tr",{parentName:"thead"},(0,r.mdx)("th",{parentName:"tr",align:null},"Column"),(0,r.mdx)("th",{parentName:"tr",align:null},"Type"),(0,r.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,r.mdx)("tbody",{parentName:"table"},(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"cam_uid")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Unique identifier of camera")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"graph_uid")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Unique identifier of the world coordinate frame")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"{tx,ty,tz,qx,qy,qz,qw}_world_cam")),(0,r.mdx)("td",{parentName:"tr",align:null},"float"),(0,r.mdx)("td",{parentName:"tr",align:null},"Pose of the camera coordinate frame in world frame T_world_cam, translation (tx, ty, tz) in meters and rotation quaternion (qx, qy, qz, qw)")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"image_width")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Image size in pixels")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"image_height")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Image size in pixels")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"intrinsics_type")),(0,r.mdx)("td",{parentName:"tr",align:null},"string"),(0,r.mdx)("td",{parentName:"tr",align:null},"Camera intrinsics calibration type. Currently support types: ",(0,r.mdx)("inlineCode",{parentName:"td"},"KANNALABRANDTK3"),": ",(0,r.mdx)("a",{parentName:"td",href:"/projectaria_tools/docs/tech_insights/camera_intrinsic_models#the-kannalabrandtk3-kb3-model"},"KB3 model"))),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"intrinsics_{0-7}")),(0,r.mdx)("td",{parentName:"tr",align:null},"float"),(0,r.mdx)("td",{parentName:"tr",align:null},"Camera intrinsics parameters")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Used to determine if start frame number of the video is stationary, and if stationary camera pose and intrinsic calibration results can be applied. ",(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")," will both be -1 if the stationary pose and intrinsic calibration can be applied to the whole video")),(0,r.mdx)("tr",{parentName:"tbody"},(0,r.mdx)("td",{parentName:"tr",align:null},(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")),(0,r.mdx)("td",{parentName:"tr",align:null},"int"),(0,r.mdx)("td",{parentName:"tr",align:null},"Used to determine if the end frame number of the video is stationary and if stationary camera pose and intrinsic calibration results can be applied. ",(0,r.mdx)("inlineCode",{parentName:"td"},"start_frame_idx")," and ",(0,r.mdx)("inlineCode",{parentName:"td"},"end_frame_idx")," will both be -1 if the stationary pose and intrinsic calibration can be applied to the whole video")))))}c.isMDXComponent=!0}}]);